/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{


    inlet
    {
	type fixedValue;
	value nonuniform List<vector>
	17
	(
	(   7.1456   -0.0048  0.0000)
(   7.1502   -0.0108  0.0000)
(   7.1544   -0.0159  0.0000)
(   7.1550   -0.0206  0.0000)
(   7.1505   -0.0245  0.0000)
(   7.1410   -0.0276  0.0000)
(   7.1280   -0.0306  0.0000)
(   7.1121   -0.0326  0.0000)
(   7.0891   -0.0341  0.0000)
(   7.0554   -0.0347  0.0000)
(   7.0020   -0.0342  0.0000)
(   6.9032   -0.0326  0.0000)
(   6.6995   -0.0290  0.0000)
(   6.2173   -0.0224  0.0000)
(   5.6225   -0.0172  0.0000)
(   3.9697   -0.0091  0.0000)
(   2.9485   -0.0033  0.0000)

	);    

    }

    fuelInjector
    {
	type fixedValue;
	value nonuniform List<vector>
	5
	(
	(   0.5717   -0.2226  0.0000)
(   0.7001   -0.2216  0.0000)
(   0.6164   -0.1664  0.0000)
(   0.3928   -0.0901  0.0000)
(   0.1436   -0.0350  0.0000)

	);    

    }

    secondaryInlet
    {
	  type    fixedValue;
	  value uniform (0.1 0 0);
    }

    outlet
    {
        type            zeroGradient;
    }
    top
    {
        type fixedValue;
        value uniform (0 0 0);
    }
    frontWall
    {
        type fixedValue;
        value uniform (0 0 0);
    }
    axis
    {
        type            empty;
    }
    front
    {
        type            wedge;
    }

    back
    {
        type            wedge;
    }





}

// ************************************************************************* //
