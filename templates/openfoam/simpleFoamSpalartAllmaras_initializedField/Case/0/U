/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{


    inlet
    {
	type fixedValue;
	value nonuniform List<vector>
	17
	(
	(   5.1198   -0.0035  0.0000)
(   5.1235   -0.0078  0.0000)
(   5.1284   -0.0120  0.0000)
(   5.1321   -0.0156  0.0000)
(   5.1320   -0.0185  0.0000)
(   5.1277   -0.0209  0.0000)
(   5.1190   -0.0230  0.0000)
(   5.1067   -0.0245  0.0000)
(   5.0877   -0.0256  0.0000)
(   5.0575   -0.0259  0.0000)
(   5.0081   -0.0252  0.0000)
(   4.9140   -0.0234  0.0000)
(   4.7197   -0.0201  0.0000)
(   4.2747   -0.0147  0.0000)
(   3.7630   -0.0108  0.0000)
(   2.4902   -0.0052  0.0000)
(   1.7224   -0.0019  0.0000)

	);    

    }

    fuelInjector
    {
	type fixedValue;
	value nonuniform List<vector>
	5
	(
	(   0.5040   -0.1430  0.0000)
(   0.6949   -0.1585  0.0000)
(   0.6574   -0.1282  0.0000)
(   0.4498   -0.0735  0.0000)
(   0.1809   -0.0291  0.0000)

	);    

    }

    secondaryInlet
    {
	  type    fixedValue;
	  value uniform (0.1 0 0);
    }

    outlet
    {
        type            zeroGradient;
    }
    top
    {
        type fixedValue;
        value uniform (0 0 0);
    }
    frontWall
    {
        type fixedValue;
        value uniform (0 0 0);
    }
    axis
    {
        type            empty;
    }
    front
    {
        type            wedge;
    }

    back
    {
        type            wedge;
    }





}

// ************************************************************************* //
